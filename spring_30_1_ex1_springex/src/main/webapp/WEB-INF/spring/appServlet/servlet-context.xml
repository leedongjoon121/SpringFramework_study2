<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<mvc:annotation-driven/>
	<mvc:resources mapping="/resources/**" location="resources/"/>
	
	<context:component-scan base-package="com.javalec.spring_mybatis" />
	
<!-- DataBase에 접근 하기 위한 각종 driver 값들 !! -->
	<!-- dataSource라는 이름으로 빈을 생성 한다. spring의 jdbc를 이용해 dataSource 빈을 이용할 거다.-->
	<beans:bean name="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
	    <!-- jdbc 드라이버 클래스  -->
		<beans:property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<!-- url 추가 : oracle 설정 방식에 맞추어..! 기존에 Server 환결설정 : context.xml에서 Resource 추가 했던거  -->
		<beans:property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" />
		<!-- username과 password를 설정 -->
		<beans:property name="username" value="dongjoon" />
		<beans:property name="password" value="8903203" />
	</beans:bean>
	
<!-- 	<beans:bean name="template" class="org.springframework.jdbc.core.JdbcTemplate">
		<beans:property name="dataSource" ref="dataSource"/>
	</beans:bean> -->
	
<!-- 	<beans:bean name="dao" class="com.javalec.spring_mybatis.dao.ContentDao">
		<beans:property name="template" ref="template"></beans:property>
	</beans:bean> -->
	
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	   <!-- JdbcTemplate을 사용하지 않고, sqlSessionFactory에서 처리함 -->
		<beans:property name="dataSource" ref="dataSource"></beans:property>
		<beans:property name="mapperLocations" value="classpath:com/javalec/spring_mybatis/dao/mapper/*.xml"></beans:property>
	</beans:bean>
	
	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0" ref="sqlSessionFactory"></beans:constructor-arg>
	</beans:bean>
	
</beans:beans>
